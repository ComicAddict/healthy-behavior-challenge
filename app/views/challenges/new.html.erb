<%= render 'main/navbar' %>

<div class="container">
  <dialog style="min-width: 50%">
    <%= form_with model: @challenge, local: true do |form| %>   
      <div class="form-field">

        <div id="template-fields">
        </div>
        </br>
        <%= form.submit 'Create Challenge', class: "btn btn-primary" %>
        </div>
    <% end %>
    </br>
    <button autofocus>Close</button>
  </dialog>

  <div class="form-box">
    <div class="row">
      <div class="col-md-6 col-md-offset-3" style="margin-top: 10%;">
        <% if flash[:notice] %>
          <div class="alert alert-success text-center">
            <%= flash[:notice] %>
          </div>
        <% elsif flash[:alert] %>
          <div class="alert alert-danger text-center">
            <%= flash[:alert] %>
          </div>
        <% end %>        

        <h2 style="font-weight: 500; padding: 0 0 3% 0">Create New Challenge</h2>
        <%= form_with model: @challenge, local: true do |form| %>
          <div class="form-field">
            <%= form.label :name, 'Challenge Name' %>
            <%= form.text_field :name, required: true, class: "form-control" %>
          </div>
          <br>

          <div class="form-field">
            <%= form.label :startDate, 'Start Date' %>
            <%= form.date_field :startDate, required: true, class: "form-control" %>
          </div>
          <br>

          <div class="form-field">
            <%= form.label :endDate, 'End Date' %>
            <%= form.date_field :endDate, required: true, class: "form-control" %>
          </div>
          <br>

          <div id="task-fields">
            <%= form.label :everyDay, 'Todo List Tasks' %> <button name="add-list" type="button" id="add-task-list-button" class="btn btn-success btn-circle"><span class="glyphicon glyphicon-plus" style="display: inline-block;"></span></button>
            <br>

            <%= label @challenge, 'challenge_templates', 'Select a predefined challenge template' %>
            <br>
            <%= form.select 'challenge_templates', options_for_select(@challenge_templates.collect{|c|[c.name, c.id]}), {include_blank: true}, {:class => 'form-control'}  %>
  
               
            <div class="task-field">
              <div class="form-field">
                <label for="challenge_tasks_attributes_0_taskName">Additional Task Details</label>
                <input type="text" name="challenge[tasks_attributes][0][taskName]" id="challenge_tasks_attributes_0_taskName" class="form-control" required>
                <a href="#" class="remove-task" data-index="${taskListIndex}">Remove Task</a>
              </div>
            </div>  
            <br>
            
            <div id="additional-task-lists"></div>
          </div>
          <br>
          
          <div class="form-field">
            <%= form.submit 'Create Challenge', class: "btn btn-primary" %>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const addTaskListButton = document.getElementById("add-task-list-button"); // Corrected to "add-task-list-button"
    const taskFields = document.getElementById("task-fields");
    const additionalTaskLists = document.getElementById("additional-task-lists");
    const dialog = document.querySelector("dialog");
    const showButton = document.querySelector("dialog + button");
    const closeButton = document.querySelector("dialog button");
    const templateDropdown = document.getElementById("challenge_challenge_templates")
    const predefinedChallengeTasks = document.getElementById("template-fields")
    
    let taskListIndex = 1; // Counter for additional task lists

    // Handle adding a new task list
    addTaskListButton.addEventListener("click", function() {
      const taskListForm = `<div class="task-field">
        <div class="form-field">
          <label for="challenge_tasks_attributes_${taskListIndex}_taskName">Additional Task Details</label>
          <input type="text" name="challenge[tasks_attributes][${taskListIndex}][taskName]" id="challenge_tasks_attributes_${taskListIndex}_taskName" class="form-control" required>

          <a href="#" class="remove-task" data-index="${taskListIndex}">Remove Task</a>
        </div>
      </div>`;

      additionalTaskLists.insertAdjacentHTML("beforeend", taskListForm);
      taskListIndex++;
    });

    // Handle removing tasks or task lists
    taskFields.addEventListener("click", function(e) {
      if (e.target.classList.contains("remove-task")) {
        e.preventDefault();
        const container = e.target.closest(".task-field");
        container.remove();
      }
    });

    // Initially set the "taskFields" to be visible
    taskFields.style.display = "block";

    // Selecting a template opens the dialog modal
    templateDropdown.addEventListener("change", () => {
    const challengeId = templateDropdown.value

    // show tasks of the selected challenge, 
    // instead of (1), we need to provide the challengeId
    predefinedChallengeTasks.innerHTML = '<ol><% Challenge.find(1).tasks.each do |task| %><li style="font-size: 18px; text-align: center"><%= task.taskName %></li><% end %></ol>'

    dialog.showModal(challengeId);
    });

    // "Close" button closes the dialog
    closeButton.addEventListener("click", () => {
      dialog.close();
    });
  });
  
</script>
